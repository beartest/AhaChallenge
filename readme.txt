啊哈挑战
http://tz.ahalei.com/

用户名：熊熊_E0oqY
届时一共67道题

作者使用的是C语言，我依然用js实现。虽然全部题目都算出了结果， 40题、55题效率很低，51题效率更是低的让人难过，有待后续提高。

1. 开始挑战！
2. Macbook Air 的键盘！
	“Macbook Air 的键盘上有多少个按键？”
	这题对我这种在温饱线上挣扎的人，确实有一定难度。（78个）
3. 1~123456
4. 斐波那契数列。
5. 2~12345中有多少个质数？
6. 质数和。
7. 987654321的最大质因子是？
8. 孪生质数。
9. 贪吃的猴子。
10. 小明爬楼梯。
	q10.js采用深度优先搜索，递归解决，耗时很大。
	q10.1.js为优化解法，这个问题是斐波那契数列的变形。
	参考评论区的答案：http://www.ahalei.com/thread-3047-1-1.html,以下为引用：
		设台阶的数目为n， 走法是f(n)
		首先注意到
		n = 1，只有一节台阶， 那么f(n) = 1
		n = 2，f(n) = 2
		n = 3，f(n) = 4 (1, 1, 1) (2, 1) (1, 2) (3) 这四种走法
		对于比较大的数字，注意最后一步，可能走了1节，也可能走了2节，也可能走了3节
		如果走1节，那么可能性一共有f(n-1)种，如果走2节，可能性一共f(n-2)种，3节就是f(n-3)种
		于是得到f(n) = f(n-1) + f(n-2) + f(n-3) (n >= 4)
11. 123456789！
12. 5483298756!
	第11题 请在123456789中插入3个乘号，使得乘积最大？请问乘积最大是多少？
	第12题 请在5483298756中插入3个乘号，使得乘积最大？请问乘积最大是多少？
	题目可以抽象为在一串数字中插入n个乘号，使得乘积最大。数字长度为m，则可以插入*的地方有m-1个。使用深度优先搜索，可以想象为在n个盒子里放0到m-2的数字，遍历所有可能，再对应的算出结果，取得乘积最大的一组。
	用一个数组steps来存储所有的乘号存放位置。
	首先设置一个calculate()方法，根据steps计算乘积。
	设置setPos()方法，参数为step。如果steps.length == n,调用calculate计算结果，对比最大值后，返回。否则，确定下一个符号的位置。这里下一个符号的位置有这样几个约束条件，如果是第一个乘号，可以从第0个位置开始，否则必须在上一个乘号的位置之后。最大的位置不能超过m-2，还可以再根据未插入的乘号个数来优化。确定了循环的范围，循环体中首先steps.push(i);记录符号位置，然后递归调用setPos(step)。
	注意！！！
	一定下次循环前一定要去掉上次记录的符号位置，steps.pop();
13. 数字游戏。
	说好的三位数，而且还是可以全排列的，为什么会包含0……不要在意那些细节，哈哈。
14. 完美和式。
	《啊哈！算法》中的例题。
15. 完美乘积式。
	是14题的变形。
16. 1～10000000之间7的倍数和末尾含7的数。
17. 鬼谷子的趣题。
	一开始看到我想这真的是算法题么,更像一道逻辑题。网上比较明晰的解说：https://wk.baidu.com/view/4974caa3960590c69ec37672?pcf=2#4
18. 喜欢开关灯的小明。
19. 87654321盏灯!
	18题和19题都是开关灯问题，一个100盏灯，一个87654321盏灯。
	18题用数组模拟点灯，时间复杂度为O(N^2),空间复杂度O(N)的方法实现了。
	19题用18题的方法，内存溢出。自作聪明的把数组去掉，O(N^2)的时间复杂度还是让我吃了一壶。1s算一盏灯的要算三年(ノ△・。)。
	仔细想想，这个问题可以转化为，一个数n能被1-n整除的次数是奇数还是偶数。
一般的都肯定是偶数 x = a * b, x = c * d ……,只有 x = a * a的时候，才会是奇数。也就是说1-87654321里面是一个整数的平方的数1 4 9 16 25……这些的，对应的灯都关掉了。那么剩下的就是亮着的灯咯~更直接的说Math.sqrt(87654321)盏灯关闭。
20. 1 2 3 4
21. 2147483647！
22. 火柴棍的等式
	《啊哈！算法》中的例题。
23. Hanks的儿子的趣味题
	求最大公约数的方法有很多，这里实现了辗转相除法和更相减损法。论坛中有说b0*i/gcd2(b0,i)替换成b0/gcd2(b0,i)*i,可以防止溢出。
24. 41是一个很特殊的质数
	读题出现一些误解，10000000指的是最大质数和的范围，而非质数范围。
25. 克拉兹问题
26. 还是克拉兹问题
	两道题都是克拉兹问题，25题10000以内，26题1000000以内。
	计算步数使用递归或者非递归都可以，
	当x为2n，需要的步数f(2n)=f(n)+1,仅多一步，不可能是步数最大的。
	而x为2n+1， 3*(2n+1)+1 <= 1000000，f(2n+1)=f(3*(2n+1)+1)+1,仅多一步，也不可能是步数最大的。
	添加这两个条件判断，可以减少计算步数的数字。
27. 第10001个质数是什么
28. 验证哥德巴赫猜想！
29. 眼花缭乱1
30. 眼花缭乱2
31. 有多少个“1”呢
32. 所有位上的和
33. 1～20的最小公倍数。
	最小公倍数实质上是两个数之积除以最小公因数，最小公因数求解使用更相减损法，先求1和2的最小公倍数，再用这个数和3求最小公倍数，……。
34. 神奇的125874
	解答见67题。
35. 疯狂的9位数
36. 回文之路
37. 整数拆分
	这道题使用递归，首先分析题目，设方程f(x,max),x代表当前处理的数，max为拆分时最大的那个值。
	以4为例，f(4,3)看作是以3开头的一组和其他的，以3开头的一组是(4-3)个数字的排列，最大的为3，剩下的是4的排列中最大为2的。
	f(4,3) = f(1,3)+f(4,2);
		3 1
		2 2
		2 1 1
		1 1 1 1
	f(4,3)
		= f(1,3) + f(4,2)
		= 1 + f(4,2)
		= 1 + f(2,2) + f(4,1)
		= 1 + f(2,1) + 1 + f(4,1)
		= 4
	上面的式子可以总结出
		x==1   f(x,max)=1
		max==1 f(x,max)=1
		x==max f(x,max)=f(x,max-1)+1;
		x>max f(x,max)=f(x - max, max) + f(x, max - 1);
		x<max f(x,max)=f(x,x);
	q37.js使用递归方法，但是处理100的时候会递归深度过大。
	q37.1.js使用动态规划方法对递归进行优化，用一个数组存储f(x,max)的值，调用递归前先判断数组中是否存储着对应值，如果有就直接取用数组中的值，不进行递归。大大的降低了递归嵌套深度，提高了计算的效率。
38. 拆分勾股数	
	注意范围3~1000，包含1000。
39. 又是整数拆分
	27题是拆分成1，39题是整数拆分成质数，可以看作是37题的升级版。
	37题的出口有两个，x==1或者max==1。39题在x==2或x==3的时候也是一个出口，这时候要判断max是否大于等于x，因为f(3,2)=0;在x==max和x>max的时候需要判断max是否为质数。
40. 数独
	使用递归深度优先遍历整个数独，效率低。
41. 完数
42. 第5个完数
	第5个完全数非常大，这里利用梅森素数（形如2^n − 1的素数）来求解。
	梅森素数和完全数有如下的对应关系：
	梅森素数：2^n − 1
	完全数：2^(n-1)*(2^n − 1)
43. □3＊6528=3□＊8256
44. 找出神秘X
45. 请问2～1000000之间有多少个回文素数
46. 拆分合数
47. Amicable Pair
48. 守形数
49. 寻找顽强素数
50. 寻找整数n
51. 与合数有仇？又来拆分合数！
	虽然得到了结果，但是效率很差，有待提高。
52. 特殊的等差递增序列
	获取4位数素数之后，用字典的方法把数字组成相同的素数放在一个数组中，再对数组长度大于等于3的进行遍历。
53. 最后10位数字是？
54. 四胞胎素数
55. 1406357289是一个很有趣的数
	深度优先遍历生成各位不重复的10位数。效率较低。
56. 一元二次式
57. 奶牛们的牧场
58. 诡异的直角三角形周长
	q58.js是我写的简单算法，但并不能计算到150,0000,这里只计算12~1500。
	q58.1.js为优化解法。找到了昵称“代号4101”的博客，参考资料：http://blog.csdn.net/code4101/article/details/18306997
	涉及到数论中的知识，x^2+y^2=z^2的适合条件(x,y)的一切正整数解都可以表示成x=2ab，y=a^2-b^2,z=a^2+b^2;
59. 约数最多
60. 找出所有等于各位数阶乘之和的数字之和
61. 100万以下有多少个环形质数
	做计算的过程中，n是字符串的时候，会自动转化为数字。由于for循环，计算效率很差。通过添加强制转换，来提高效率。
62. 找出所有能写成Pandigital数字乘积的数字之和
63. 找出所有可以双向裁剪的质数之和
64. 同一直线上四个数的最大乘积是多少？
65. 用英文写出1到1000的所有数字需要多少个字母？
66. 找出由互为排列的4位数质数组成的序列
	和52题几乎完全一致，代码见q52.js，只是输出的数字不带空格。
67. 又见神秘X
	34题 x,2x,3x,4x,5x,6x的倍数所组成的数和本身一样,
	67题 2x, 3x, 4x, 5x, 和6x都包含同样的数字,
	这两道题类似，答案也相同。这里给比较组成数时，将int用split("")转化为数组，直接用sort()排序后，在用join("")转化为字符串进行比较。c语言中可以使用while循环得出所有组成数后，进行桶排序。